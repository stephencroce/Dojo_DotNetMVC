@using StackExchange.Profiling;

@{
    //this is an experiment using stack exchange's mini profiler to try and understand website performance.  To date, I've had mixed results, so as an alternative I downloaded Red Gate's ANTS profiler Tool,
    //which essentially does what you need it to do right out of the box.
    MiniProfiler.Start();
    var profiler = MiniProfiler.Current; // it's ok if this is null

    using (profiler.Step("Set page title"))
    {
        ViewBag.Title = "Home Page";
    }
    //MiniProfiler.Stop();
}
<style>
    /*STUPID HTC CRAP
    http://stackoverflow.com/questions/10767006/what-is-htc-file-how-it-works-in-internet-explorer
    https://en.wikipedia.org/wiki/MSXML
    https://msdn.microsoft.com/en-us/library/ms531079(v=vs.85).aspx
    http://samples.msdn.microsoft.com/workshop/samples/author/behaviors/hilite1.htm
    http://samples.msdn.microsoft.com/workshop/samples/author/behaviors/hilite2.htm
    http://samples.msdn.microsoft.com/workshop/samples/author/behaviors/hilite.htc*/
    #stupidHTC LI {
        color: lightblue;
        behavior: url(/Crap/HTCCrap/StupidHTC.htc);
    }
</style>

<div style="border:dotted blue 2px; padding:5px;">
    <div>
        disable mutli-click of these buttons implemented as an html button:
    </div>
    <div>
        <button type="button" class="bntWf disableMultiClick" id="bntUnWatch">Un-Watch</button>
        <button type="button" class="bntWf disableMultiClick" id="bntWatch">Watch</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFRollBack">Roll Back</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFRevive">Revive</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFCancel">Cancel</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFReschedule">Reschedule</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFOpen">Open</button>
        <button type="button" class="bntWf disableMultiClick" id="bntCWFHistory">View History</button>
    </div>
    <div>
        disable mutli-click of these buttons implemented as an html input:
    </div>
    <div>
        <INPUT id="LetterWizard_Step_bntSend" class="disableMultiClick" type="submit" value="Send" name="LetterWizard:Step:bntSend" />
        <INPUT onclick="CloseDialog(false);" id="LetterWizard_Step_bntCancel" class="disableMultiClick" language="javascript" type="submit" value="Cancel" name="LetterWizard:Step:bntCancel" />
    </div>
    <div id="nuthin" style="font-size:0.8em; color:green;">
        http://debug.client.na.intelliclaim.net/claims/controls/workflow/rollback.aspx?ClaimId=1564561&ClaimWorkFlowID=17456471&DueDate=4/6/2016%2003:36:47%20PM&1475174871940&dt=1475174871940
    </div>
</div>
<div style="border:dashed red 2px;">
    <hr />
    <DIV id="stupidHTC">
        HTC leverages the deprecated "behavior" property of css that only IE 5-9 understands.  The actual behaviors are stored in the htc file as a mixture of xml, js and html
        <div style="text-align:center; color:darkblue; font-weight:bolder;">HTC Crap - IMPORTANT - IT ONLY WORKS IN IE5-IE9-So you have to use the ie emulator</div>
        <P>
            Mouse over the two list items below to see this effect, and then examine in the code how annoyingly it's implemented
            using an old deprecated **IE specific** pattern called HTC.  It should turn <span style="color:red;">red</span>
        </P>
        <ul>
            <li>HTML Authoring </li>
            <li>Dynamic HTML </li>
            <li STYLE="behavior:url(/Crap/HTCCrap/StupidHTC.htc)">inline example</li>
        </ul>

    </DIV>
    <hr />
</div>

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">dummy - ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<h4>Bootstrap Bullshit - Here's another navbar:</h4>
<div class="navbar navbar-inverse container">
    <div id="stupidHTC">
        <a class="brand" href="#">Title</a>
        <ul class="nav">
            <li class="active"><a href="#">Home</a></li>
            <li><a href="#">Link</a></li>
            <li class="divider"></li>
            <li><a href="#">Link</a></li>
        </ul>
    </div>
</div>
I added this as a test to git
<div style="border:red solid 1px;">
    ---graphic-start
    @{



        using (profiler.Step("Doing complex stuff"))
        {
            using (profiler.Step("Step A"))
            { // something more interesting here
                System.Threading.Thread.Sleep(100);
            }
            using (profiler.Step("Step B"))
            { // and here
                System.Threading.Thread.Sleep(250);
            }
        }


    }

    <div>
        <b>
            SVG PLAYGROUND
        </b>
    </div>
    <div>
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="400" width="450">
            <path id="curveAB" d="M 100 350 q 150 -300 300 0" stroke="blue" stroke-width="5" fill="none" />
            <!-- Mark relevant points -->
            <g stroke="black" stroke-width="3" fill="black">
                <circle id="pointA" cx="100" cy="350" r="3" />
                <circle id="pointB" cx="400" cy="350" r="3" />
            </g>
            <!-- Label the points -->
            <g font-size="30" font="sans-serif" fill="black" stroke="none" text- anchor="middle">
                <text x="100" y="350" dx="-30">A</text>
                <text x="400" y="350" dx="30">B</text>
            </g>
        </svg>
        This one works - why doesn't the previous one work?
        <svg height="100" width="100">
            <circle cx="50" cy="50" r="40" stroke="black" stroke-width="3" fill="red" />
            Sorry, your browser does not support inline SVG.
        </svg>
        <svg height="400" width="450">
            <path id="lineAB" d="M 100 350 l 150 -300" stroke="red" stroke-width="3" fill="none" />
            <path id="lineBC" d="M 250 50 l 150 300" stroke="red" stroke-width="3" fill="none" />
            <path d="M 175 200 l 150 0" stroke="green" stroke-width="3" fill="none" />
            <path d="M 100 350 q 150 -300 300 0" stroke="blue" stroke-width="5" fill="none" />
            <!-- Mark relevant points -->
            <g stroke="black" stroke-width="3" fill="black">
                <circle id="pointA" cx="100" cy="350" r="3" />
                <circle id="pointB" cx="250" cy="50" r="3" />
                <circle id="pointC" cx="400" cy="350" r="3" />
            </g>
            <!-- Label the points -->
            <g font-size="30" font="sans-serif" fill="black" stroke="none" text-anchor="middle">
                <text x="100" y="350" dx="-30">A</text>
                <text x="250" y="50" dy="-10">B</text>
                <text x="400" y="350" dx="30">C</text>
            </g>
            Sorry, your browser does not support inline SVG.
        </svg>
    </div>
    ---graphic-end
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>
<div class="myClass">
    hello myclass
</div>
<script>
    //console.log('disable script start');
    $(".myClass").css("border", "3px solid blue");

    var docCompatMode = document.compatMode === 'CSS1Compat' ? 'Standards' : 'Quirks';
    console.log(document.compatMode);

    //if (docCompatMode != 'Quirks') {

    //doesn't work in ie 7/quirks mode
    //var theButtons = document.getElementsByClassName("disableMultiClick");

    var theButtons = $(".disableMultiClick");
    console.log(theButtons);

    var count = 0;

    //doesn't work in ie 7/quirks mode
    //for (var b = 0; b < theButtons.length; b++) {
    //    var button = theButtons[b];
    //    button.addEventListener('click', disableMultiCLick, false);
    //}

    $(".disableMultiClick").on("click", function () {
        disableMultiCLick(this);
    });

    //doesn't work in ie 7/quirks mode
    //for (var b = 0; b < theButtons.length; b++) {
    //    var button = theButtons[b];
    //    button.addEventListener('click', doStuff, false);
    //}

    $(".disableMultiClick").on("click", function () {
        doStuff();
    });

    //console.log('disable script end');

    function disableMultiCLick(theButtonToDisable) {
        //var theButtonToDisable = this;
        theButtonToDisable.innerHTML = '<span class="ui-button-text">Submitting...</span>';
        theButtonToDisable.style.backgroundColor = '#ffe6e6';
        theButtonToDisable.disabled = true;
        // console.log(this.id + ' was disabled.')
        console.log(theButtonToDisable.id + ' was disabled.')
    }

    //DaveG:  also try removing the click event listener as an alternative way to disable

    function doStuff() {
        var elmHtml = document.getElementById("nuthin").innerHTML;
        if (count == 0) {
            elmHtml = "";
        }
        document.getElementById("nuthin").innerHTML = elmHtml + this.id;
        count++;
        window.open('http://www.zombo.com', "ZomboWindow" + count, "width=200,height=100");

    }

    function enumerateButtonIds(buttonArray) {
        var arr = Array.prototype.slice.call(buttonArray)
        for (var a = 0; a < arr.length; a++) {
            console.log((a + 1) + '. button id= ' + arr[a].id);
        }
    }

    //info: and debugging:
    console.log('the browser is in ' + (document.compatMode === 'CSS1Compat' ? 'Standards' : 'Quirks') + ' mode.');  //http://stackoverflow.com/questions/627097/how-to-tell-if-a-browser-is-in-quirks-mode
    console.log('disableMultiClick successfully added to this page');
    console.log('buttonsToDisable:' + theButtons);
    console.log('script sees the following ' + theButtons.length + ' buttons on which to disable multi-click:');
    enumerateButtonIds(theButtons);
</script>